[general]
# This is needed for push-notifications, must be unique for this server in your (lan) setup
serverId=<string to identify your server instance>
# Configure the sensor / actor counts here. Each sensor actor must have a section in
# this file e.g. switch_1, switch_2,...
switchCount=0
fs20Count=0
peerCount=0
ultrasonicCount=0
temperatureCount=0
netioCount=0
hms100tCount=0
hms100tfCount=0
cameraCount=0
rpiCam=0
bmp180Count=0
awningCount=0
chromeCastCount=0
# to be removed
fs20Data=<adjust this path>/fs20.json
# Path & Name of SQLite Database, path must exist & be writeble
database=/root/dev/prc/prc.db
# directory to sql scripts. The file createTables.sql will be read and executed if the database
# file does not exist.
sqlScripts=<adjust this path>/sql
certFile=<adjust this path>/ssl/server.crt
keyFile=<adjust this path>/ssl/server.key
clientCertFile=<adjust this path>/ssl/ca.crt
# convenience for shellcmds - address is passed in params to make api calls simpler
address=https://<your ip goes here>:8020/prcapi
# url used for serving content for chromecast
addressNoSSL=http://<your ip goes here>:8019/prcweb
# base path of installation:rel path to backup from other peers:file:file:...:path/:path/:...
peerBackup=<adjust this path>/:backup/:prc.ini:prc.db:ssl/:shellCmds/
streamWorkDir=
openRTSPCmd=
ffmpegCmd=
MP4BoxCmd=

[webServer]
default=index.html
webRoot=<adjust this path>/www
headline=<your servername here>



[pushNotification]
# 1 / yes = enable messaging -
# default no
#enable=

# path + /serviceAccountKey.json from firebase console / service accounts (no default)
privateKey=

# key from firebase console project settings / cloud messaging /server key (no default)
apiKey=

# taken from firebase console / project settings (no default)
projectId=

# taken from firebase console / cloud messaging (no default)
publicKey=

# path + /service_account.json form firebase console / service accounts (no default)
serviceAccountFile=

# we are using HTTP v1 -> project specific url (%s in url will be replaced by value of key projectId
# default https://fcm.googleapis.com/v1/projects/%s/messages:send
#url=

# tell firebase what we are using
# default: https://www.googleapis.com/auth/firebase.messaging
#scopes=

# subscribe a client / browser to a topic
# default https://iid.googleapis.com/iid/v1/%s/rel/topics/%s % (projectId, <topicName>)
#urlSubscribe=

# unsubscribe a client / browser from topic
#default https://iid.googleapis.com/iid/v1/%s/rel/topics/%s % (projectId, <topicName>)
#urlUnsubscribe=

# list subscriptions for a client token
# default https://iid.googleapis.com/iid/info/%s?details=true
#urlGetSubscriptions=

[realtimeDB]
# default is no
#enable=yes
#url to firebase realtime db
databaseUrl=
# key file from firebase console
serviceAccountFile=
# helper words
more=more
less=less
#list of keys to be added to firebase realtime db
# key values are copied into db on start of server
googleActionParameters=<key>:<key>...
<key>=<value>

[chromeCast_1]
friendlyName=<name of device - find on TV lower left corner in IDLE mode>
callName=<name of device to be used with Google Assistant

[Cuno]
enable=yes
host=<ip address>
port=2323
ignore=<addresses to ignore>

[switch_1]
gpio=<gpio number>
name_de=<desc german>
name_en=<desc english>
name_pl=<desc polish>


[peer_1]
name_de=
name_en=
name_pl=
address=
# optional key: specfify this when peer is PRC
roamingAddress=https://<ip>/prcapi

[fs20_1]
name_de=
name_en=
name_pl=
address=
# specify this, if Cuno is to be used for sending
#useCuno=1


[ultrasonic_1]
name_de=
name_en=
name_pl=
min=5
max=45
inverse=true

[temperature_1]
name_de=
name_en=
name_pl=
address=28-000006nnnnnn
min=-5
max=40


[netio_1]
name_de=
name_en=
name_pl=
address=<ip>:<port>:<plug>
id=<user>:<password>


[hms100t_1]
name_de=
name_en=
name_pl=
address=

[hms100tf_1]
name_de=
name_pl=
name_en=
address=

[ksh300_1]
name_de=
name_pl=
name_en=
address=
googleActionVerbs=<colon(:) separated list of strings to be matched by a google action parameter>
googleActionResponses=The outside temperature is {temperature} degree celsius, the humidity is {humidity} percent. Measured {ago}.:
    separate responses bei a colon. Multiline values need to have a four char indentation starting with the 2nd line

[fs20Sensor_1]
name_de=
name_pl=
name_en=
address=
shellCmd=
# no fcm message notify
disableNotify=1
peerSensors=<other sensor>
shellCmd=<path to script>:<status of sensor / actor>:<status ...>

[bmp180_1]
name_de=
name_en=
name_pl=

[awning_1]
name_de=
name_en=
name_pl=
address=

[camera_1]
name_de=
name_pl=
name_en=
enableTimelapse=yes
snapshotAddress=
streamAddress=
timelapseMP4=
timelapseCodec=
timelapseJPGs=
# default is 6 hours
#timelapseHours=


[rpiCam_1]
name_de=
name_pl=
name_en=

[shellCmds]
count=1
shellCmd_1=<id>:<path to script>:<status of sensor / actor>:<status ...>

[dictionary_de]
txt_1=Schalter
txt_2=[Relais]
txt_3=[FS20]
txt_4=Abstand
txt_5=[Ultraschall]
txt_6=Temperatur
txt_7=[DS18B20]
txt_8=Links
txt_9=Information
txt_10=Menü
txt_11=Relais Board Schalter
txt_12=FS20 Schalter
txt_13=Ultraschall
txt_14=Temperatur (DS18B20)
txt_15=NetIO230 Schaltleiste
txt_16=[NetIO230]

[dictionary_pl]
txt_1=Przekaźnik
txt_2=[Relais]
txt_3=[FS20]
txt_4=Dystans
txt_5=[Ultradźwięk]
txt_6=Temperatura
txt_7=(DS18B20)
txt_8=Inne strony Internetowe
txt_9=Informacja
txt_10=Menu
txt_11=Przekaźnik Przełączający
txt_12=FS20 Wyłącznik
txt_13=Ultradźwięk
txt_14=Temperatura (DS18B20)
txt_15=Listwa zasilająca
txt_16=[NetIO230]

[dictionary_en]
txt_1=Switches
txt_2=[Relay]
txt_3=[FS20]
txt_4=Distance
txt_5=[Ultrasonic]
txt_6=Temperature
txt_7=[DS18B20]
txt_8=Links
txt_9=Information
txt_10=Menu
txt_11=Relay Board Switches
txt_12=FS20 Actors
txt_13=Ultrasonic
txt_14=Temperature (DS18B20)
txt_15=NetIO230 Power Strip
txt_16=[NetIO230]

